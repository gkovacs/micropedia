// Generated by LiveScript 1.3.1
(function(){
  var J, insertArticle, getUrlParameters, out$ = typeof exports != 'undefined' && exports || this;
  J = $.jade;
  out$.insertArticle = insertArticle = function(article_name){
    var havearticle;
    havearticle = function(mdata){
      var data, ndata, i$, ref$, len$, x, target_article, newdiv;
      if (mdata.indexOf('article does not exist:') === 0) {
        toastr.error('no such article: ' + article_name);
        return;
      }
      data = marked(mdata);
      ndata = $(data);
      for (i$ = 0, len$ = (ref$ = ndata.find('a')).length; i$ < len$; ++i$) {
        x = ref$[i$];
        target_article = $(x).attr('href');
        $(x).attr('href', '#').attr('onclick', "insertArticle('" + target_article + "')");
      }
      newdiv = J('div').css({
        'padding': '10px',
        'margin': '10px',
        'border-color': 'black',
        'border-style': 'solid',
        'border-width': '1px',
        'border-radius': '10px'
      }).html(ndata);
      return $('#feeditems').prepend(newdiv);
    };
    return $.get("/markdown/" + article_name, function(mdata){
      return havearticle(mdata);
    }).fail(function(){
      toastr.error('no such article: ' + article_name);
      return false;
    });
  };
  out$.getUrlParameters = getUrlParameters = function(){
    var url, hash, map, parts;
    url = window.location.href;
    hash = url.lastIndexOf('#');
    if (hash !== -1) {
      url = url.slice(0, hash);
    }
    map = {};
    parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m, key, value){
      return map[key] = decodeURI(value);
    });
    return map;
  };
  $(document).ready(function(){
    var param, article, ref$;
    param = getUrlParameters();
    article = (ref$ = param.page) != null ? ref$ : 'index';
    return insertArticle(article);
  });
}).call(this);
