// Generated by LiveScript 1.3.1
(function(){
  var root, http_get, redis, client, escapeUnicodeEncoded, getPinyin, lastPinyinFetchTimestamp, getPinyinRateLimited, getPinyinRateLimitedCached, main;
  root = typeof exports != 'undefined' && exports !== null ? exports : this;
  http_get = require('http-get');
  redis = require('redis');
  client = redis.createClient();
  escapeUnicodeEncoded = function(text){
    return unescape(text.split('\\u').join('%u'));
  };
  getPinyin = function(text, callback){
    var reqtxt, req_headers;
    reqtxt = text.split('"').join('');
    req_headers = {
      'User-Agent': 'Mozilla/5.0 (Windows NT 6.2; WOW64; rv:16.0.1) Gecko/20121011 Firefox/16.0.1'
    };
    return http_get.get({
      url: 'http://translate.google.com/translate_a/t?client=t&text=' + reqtxt + '&sl=zh&tl=zh-CN&ie=UTF-8',
      headers: req_headers
    }, function(err, dlData){
      var buffer, pinyin;
      buffer = dlData.buffer;
      pinyin = buffer.split('","')[2];
      pinyin = escapeUnicodeEncoded(pinyin);
      client.set('pinyin|' + text, pinyin);
      return callback(text, pinyin);
    });
  };
  lastPinyinFetchTimestamp = 0;
  getPinyinRateLimited = function(text, callback){
    var timestamp, lastPinyinFetchTimestamp;
    timestamp = Math.round(new Date().getTime() / 1000);
    if (lastPinyinFetchTimestamp + 1 >= timestamp) {
      return setTimeout(function(){
        return getPinyinRateLimited(text, callback);
      }, 250);
    } else {
      lastPinyinFetchTimestamp = timestamp;
      return getPinyin(text, callback);
    }
  };
  getPinyinRateLimitedCached = function(text, callback){
    return client.get('pinyin|' + text, function(err, reply){
      if (reply != null) {
        return callback(text, reply);
      } else {
        return getPinyinRateLimited(text, callback);
      }
    });
  };
  root.getPinyinRateLimitedCached = getPinyinRateLimitedCached;
  main = function(){
    var text;
    text = process.argv[2];
    console.log(text);
    return getPinyinRateLimitedCached(text, function(ntext, pinyin){
      return console.log(pinyin);
    });
  };
  if (require.main === module) {
    main();
  }
}).call(this);
